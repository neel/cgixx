<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="base64_8h" kind="file">
    <compoundname>base64.h</compoundname>
    <includes local="no">string</includes>
    <includedby refid="base64_8cpp" local="yes">base64.cpp</includedby>
    <includedby refid="session_8h" local="yes">session.h</includedby>
    <incdepgraph>
      <node id="57">
        <label>string</label>
      </node>
      <node id="56">
        <label>base64.h</label>
        <link refid="base64.h"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="60">
        <label>cgiapp.h</label>
        <link refid="cgiapp_8h-source"/>
      </node>
      <node id="59">
        <label>session.h</label>
        <link refid="session_8h-source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>base64.h</label>
        <link refid="base64.h"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="base64_8h_13409fa3795f44deb77fe72094084d020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base64_encode</definition>
        <argsstring>(unsigned char const *, unsigned int len)</argsstring>
        <name>base64_encode</name>
        <param>
          <type>unsigned char const *</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/neel/dev/c++/cgixx/cgi++/base64.h" line="31" bodyfile="/home/neel/dev/c++/cgixx/cgi++/base64.cpp" bodystart="43" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="base64_8h_1106490c99e374daddc9575ce945d8ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base64_decode</definition>
        <argsstring>(std::string const &amp;s)</argsstring>
        <name>base64_decode</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/neel/dev/c++/cgixx/cgi++/base64.h" line="32" bodyfile="/home/neel/dev/c++/cgixx/cgi++/base64.cpp" bodystart="86" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="base64_8h_1807a14640cd6c209b869788183e17b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base64Encode</definition>
        <argsstring>(const std::string &amp;srcStr)</argsstring>
        <name>base64Encode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>srcStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/neel/dev/c++/cgixx/cgi++/base64.h" line="33" bodyfile="/home/neel/dev/c++/cgixx/cgi++/base64.cpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="base64_8h_1de13874940d7ce53cd79ffe8acbfaf5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string base64Decode</definition>
        <argsstring>(const std::string &amp;encodedStr)</argsstring>
        <name>base64Decode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>encodedStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/neel/dev/c++/cgixx/cgi++/base64.h" line="34" bodyfile="/home/neel/dev/c++/cgixx/cgi++/base64.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//code<sp/>Borrowed<sp/>from<sp/>http://www.adp-gmbh.ch/cpp/common/base64.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>base64.cpp<sp/>and<sp/>base64.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2004-2008<sp/>René<sp/>Nyffenegger</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>This<sp/>source<sp/>code<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>warranty.<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>author<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>source<sp/>code<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>source<sp/>code.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>source<sp/>code</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>source<sp/>code.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>René<sp/>Nyffenegger<sp/>rene.nyffenegger@adp-gmbh.ch</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">std::string<sp/>base64_encode(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">std::string<sp/>base64_decode(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">std::string<sp/>base64Encode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>srcStr);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">std::string<sp/>base64Decode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>encodedStr);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/neel/dev/c++/cgixx/cgi++/base64.h"/>
  </compounddef>
</doxygen>
